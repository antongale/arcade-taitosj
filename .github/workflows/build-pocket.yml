################################################################################
# SPDX-License-Identifier: CC0-1.0
# SPDX-FileType: OTHER
# SPDX-FileCopyrightText: (c) 2022, OpenGateware authors and contributors
################################################################################
name: Build/Release
################################################################################
# How to create a tag to launch the workflow
# git tag -a "0.1.0" -m "Release v0.1.0"
# git push origin --tags
################################################################################
on:
  push:
    paths-ignore:
      - '**.md'
      - '.github/FUNDING.yml'
      - '.github/ISSUE_TEMPLATE/**'
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:
    paths-ignore:
      - '**.md'
################################################################################
jobs:
  synthesis:
    runs-on: ubuntu-latest
    env:
      CORE: taitosj
      DISPLAY_NAME: "Taito System SJ"
      CATEGORY: arcade
      AUTHOR: antongale
      TARGET: pocket
      STAGE_FOLDER: staging
      RELEASE_FOLDER: release

    steps:
      - name: "🧰 Checkout Repository"
        uses: actions/checkout@v3

      - name: "🏗️ Compile Design"
        run: |
          docker run --rm -v ${{ github.workspace }}:/build raetro/quartus:pocket \
          quartus_sh --flow compile projects/${CORE}_${TARGET}.qpf

      - name: "🟦 Staging Files for Release"
        if: startsWith(github.ref, 'refs/tags/')
        id: stage
        run: |
          ############################################################
          # Create Tags
          ############################################################
          VERSION=${GITHUB_REF#refs/*/}
          DATE=$(date +'%Y-%m-%d')
          CORE_FOLDER=${AUTHOR}.${CORE}
          RBF_FILE=${CORE}_${TARGET}.rbf

          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

          echo ::set-output name=VERSION::${VERSION}
          echo ::set-output name=REPO::${CATEGORY}-${CORE}
          echo ::set-output name=TITLE::${DISPLAY_NAME}
          echo ::set-output name=RELEASE_FOLDER::${RELEASE_FOLDER}
          echo ::set-output name=RELEASE_FILE::${CORE_FOLDER}_${TARGET}-${VERSION}.zip
          echo ::set-output name=RECIPE_FILE::${CORE_FOLDER}_rom-recipes-${VERSION}.zip
          ############################################################
          # Clear/Create Folders
          ############################################################
          rm -rf ${STAGE_FOLDER} ${RELEASE_FOLDER}
          mkdir -p ${STAGE_FOLDER} ${RELEASE_FOLDER}
          ############################################################
          # Copy Packaging Folder
          ############################################################
          cp -R pkg/${TARGET}/* ${STAGE_FOLDER}
          ############################################################
          # Clear git and png source files
          ############################################################
          find ./${STAGE_FOLDER} -type f \( -name "*.png*" -o -name "*.gitkeep*" \) -delete;
          ############################################################
          # Update core.json Version and Release Date
          ############################################################
          sed -i -e "s/<%- VERSION %>/${VERSION}/g" -e "s/<%- RELEASE_DATE %>/${DATE}/g" ${STAGE_FOLDER}/Cores/${CORE_FOLDER}/core.json
          ############################################################
          # Reverse Bitstream
          ############################################################
          wget https://gist.githubusercontent.com/boogermann/fba1f59c87f9c8c9404cc68878b4eb1a/raw/7e93a3560902e0136dcb29fa6c41d06f06d78fb2/reverse_bits.c
          g++ reverse_bits.c -o reverse_bits
          ./reverse_bits projects/output_files/${RBF_FILE} ${STAGE_FOLDER}/Cores/${CORE_FOLDER}/bitstream.rbf_r

      - name: "📦 Create Distribution Files"
        if: startsWith(github.ref, 'refs/tags/')
        id: zip
        run: |
          pushd ./${STAGE_FOLDER}
          zip -r ../${RELEASE_FOLDER}/${{ steps.stage.outputs.RELEASE_FILE }} .
          popd

      - name: "🚀 Create a new GitHub Release"
        uses: softprops/action-gh-release@v0.1.14
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release v${{ steps.stage.outputs.VERSION }}
          files: |
            ${{ steps.stage.outputs.RELEASE_FOLDER }}/*

